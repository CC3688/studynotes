闭包的理解
    一,变量的作用域
        变量的作用域就两种:全局变量 和 局部变量
        js函数内部可以直接读取全局变量
        但函数外部 无法读取函数内的局部变量

    二,从外部怎样获取局部变量
        js语言特有的"链式作用域"结构,子对象会一级一级地向上寻找所有父对象的变量.所以,父对象的所有变量,对子对象都是可见的,反之则不成立。
        如果在一个 函数里(父函数),再创建 一个子函数,则此子函数 完全可以获取到所有父函数的变量,然后,再
        把 这个子函数 用return 返回出去,就等于外部,获取到 函数里的局部变量.
        这个子函数 其实就是 闭包

        闭包:就是能够读取其他函数内部变量的函数,由于在js语言中,只有函数内部的子函数才能读取局部变量,因此可以把闭包简单理解成"定义在一个函数内部的函数".所以,在本质上,闭包就是将函数内部和函数外部连接起来的一座桥梁.
    三,闭包的用途
        一个       是前面提到的可以读取函数内部的变量
        另一个就是  让这些变量的值始终保持在内存中
    四、使用闭包的注意点
        1）由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的
        性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除。
        2）闭包会在父函数外部，改变父函数内部变量的值。所以，如果你把父函数当作对象（object）使用，把
        闭包当作它的公用方法（Public Method），把内部变量当作它的私有属性（private value），这时一
        定要小心，不要随便改变父函数内部变量的值。